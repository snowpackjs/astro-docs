---
import { Markdown } from 'astro/components';
import enNav from '../../i18n/en/nav';
import { getAllNavs } from '../../i18n/util';
import MainLayout from '../../layouts/MainLayout.astro';

export async function getStaticPaths() {
	const englishPages = await Astro.glob('../en/**/*.md');

	const paths = [];
	for (const [lang, navItems] of Object.entries(getAllNavs())) {
		if (lang === 'en') continue;

		for (const navItem of navItems) {
			const enNavItem = enNav.find(({ key }) => key === navItem.key);
			if (!enNavItem || 'header' in navItem || 'header' in enNavItem) continue;
			let fallback = englishPages.find(p => p.url.slice(4) === (enNavItem.slug));
			if (!fallback) {
				console.error(`Failed to find fallback content for “${lang}/${navItem.slug}”`);
				continue;
			}
			// TODO: This uses the undocumented Markdown loading API.
			// Replace once https://github.com/withastro/astro/pull/3056 is merged.
			// @ts-ignore
			const { frontmatter } = await fallback.default();
			paths.push({ params: { lang, slug: navItem.slug }, props: { frontmatter } });
		}
	}
	return paths;
}

const { frontmatter } = Astro.props;
---

<MainLayout content={frontmatter}>
	<Markdown content={frontmatter.astro.source} />
</MainLayout>
